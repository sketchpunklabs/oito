 Seems to work well.
//https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles
function getEuler2(q: Array<number>, inDeg: boolean = true): Array<number> {
  const x = q[0];
  const y = q[1];
  const z = q[2];
  const w = q[3];

  // roll (x-axis rotation)
  const sinr_cosp = 2 * (w * x + y * z);
  const cosr_cosp = 1 - 2 * (x * x + y * y);
  const roll = Math.atan2(sinr_cosp, cosr_cosp);

  // pitch (y-axis rotation)
  const sinp = Math.sqrt(1 + 2 * (w * y - x * z));
  const cosp = Math.sqrt(1 - 2 * (w * y - x * z));
  const pitch = 2 * Math.atan2(sinp, cosp) - Math.PI / 2;

  // yaw (z-axis rotation)
  const siny_cosp = 2 * (w * z + x * y);
  const cosy_cosp = 1 - 2 * (y * y + z * z);
  const yaw = Math.atan2(siny_cosp, cosy_cosp);

  const deg = inDeg ? 180 / Math.PI : 1;
  return [roll * deg, pitch * deg, yaw * deg];
}